# JMH version: 1.21
# VM version: JDK 1.8.0_242, OpenJDK 64-Bit Server VM, 25.242-b08
# VM invoker: /Library/Java/JavaVirtualMachines/adoptopenjdk-8.jdk/Contents/Home/jre/bin/java
# VM options: -javaagent:/Applications/IntelliJ IDEA.app/Contents/lib/idea_rt.jar=60400:/Applications/IntelliJ IDEA.app/Contents/bin -Dfile.encoding=UTF-8
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: data.structure.tree.BinaryTreeTest.add

# Run progress: 0.00% complete, ETA 00:05:00
# Fork: 1 of 1
# Warmup Iteration   1: 321529.803 ops/s
# Warmup Iteration   2: 311001.101 ops/s
# Warmup Iteration   3: 328750.732 ops/s
# Warmup Iteration   4: 294945.911 ops/s
# Warmup Iteration   5: 358566.228 ops/s
Iteration   1: 278538.146 ops/s
Iteration   2: 265626.841 ops/s
Iteration   3: 111248.237 ops/s
Iteration   4: 85774.935 ops/s
Iteration   5: 40324.645 ops/s


Result "data.structure.tree.BinaryTreeTest.add":
  156302.561 ±(99.9%) 418943.386 ops/s [Average]
  (min, avg, max) = (40324.645, 156302.561, 278538.146), stdev = 108798.267
  CI (99.9%): [≈ 0, 575245.947] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_242, OpenJDK 64-Bit Server VM, 25.242-b08
# VM invoker: /Library/Java/JavaVirtualMachines/adoptopenjdk-8.jdk/Contents/Home/jre/bin/java
# VM options: -javaagent:/Applications/IntelliJ IDEA.app/Contents/lib/idea_rt.jar=60400:/Applications/IntelliJ IDEA.app/Contents/bin -Dfile.encoding=UTF-8
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: data.structure.tree.BinaryTreeTest.remove

# Run progress: 33.33% complete, ETA 00:03:25
# Fork: 1 of 1
# Warmup Iteration   1: 3014456.695 ops/s
# Warmup Iteration   2: 3151855.505 ops/s
# Warmup Iteration   3: 3190563.989 ops/s
# Warmup Iteration   4: 2932608.683 ops/s
# Warmup Iteration   5: 2952540.796 ops/s
Iteration   1: 2960665.549 ops/s
Iteration   2: 3156200.502 ops/s
Iteration   3: 3183658.988 ops/s
Iteration   4: 3019318.887 ops/s
Iteration   5: 3093322.380 ops/s


Result "data.structure.tree.BinaryTreeTest.remove":
  3082633.261 ±(99.9%) 358220.763 ops/s [Average]
  (min, avg, max) = (2960665.549, 3082633.261, 3183658.988), stdev = 93028.794
  CI (99.9%): [2724412.499, 3440854.024] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_242, OpenJDK 64-Bit Server VM, 25.242-b08
# VM invoker: /Library/Java/JavaVirtualMachines/adoptopenjdk-8.jdk/Contents/Home/jre/bin/java
# VM options: -javaagent:/Applications/IntelliJ IDEA.app/Contents/lib/idea_rt.jar=60400:/Applications/IntelliJ IDEA.app/Contents/bin -Dfile.encoding=UTF-8
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: data.structure.tree.BinaryTreeTest.search

# Run progress: 66.67% complete, ETA 00:01:41
# Fork: 1 of 1
# Warmup Iteration   1: 2562614.711 ops/s
# Warmup Iteration   2: 2684124.965 ops/s
# Warmup Iteration   3: 2662589.877 ops/s
# Warmup Iteration   4: 2435530.701 ops/s
# Warmup Iteration   5: 2511907.459 ops/s
Iteration   1: 2642389.365 ops/s
Iteration   2: 2407405.556 ops/s
Iteration   3: 2417375.028 ops/s
Iteration   4: 2378285.297 ops/s
Iteration   5: 2602054.286 ops/s


Result "data.structure.tree.BinaryTreeTest.search":
  2489501.906 ±(99.9%) 472994.222 ops/s [Average]
  (min, avg, max) = (2378285.297, 2489501.906, 2642389.365), stdev = 122835.097
  CI (99.9%): [2016507.684, 2962496.129] (assumes normal distribution)


# Run complete. Total time: 00:05:04

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark               Mode  Cnt        Score        Error  Units
BinaryTreeTest.add     thrpt    5   156302.561 ± 418943.386  ops/s
BinaryTreeTest.remove  thrpt    5  3082633.261 ± 358220.763  ops/s
BinaryTreeTest.search  thrpt    5  2489501.906 ± 472994.222  ops/s
