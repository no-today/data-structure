# JMH version: 1.35
# VM version: JDK 11.0.11, OpenJDK 64-Bit Server VM, 11.0.11+9
# VM invoker: /Library/Java/JavaVirtualMachines/adoptopenjdk-11.jdk/Contents/Home/bin/java
# VM options: -javaagent:/Users/notoday/Library/Application Support/JetBrains/Toolbox/apps/IDEA-U/ch-0/221.5080.210/IntelliJ IDEA.app/Contents/lib/idea_rt.jar=55557:/Users/notoday/Library/Application Support/JetBrains/Toolbox/apps/IDEA-U/ch-0/221.5080.210/IntelliJ IDEA.app/Contents/bin -Dfile.encoding=UTF-8
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: data.structure.benchmark.Tree23Benchmark.add
# Parameters: (size = 1000000)

# Run progress: 0.00% complete, ETA 00:06:40
# Fork: 1 of 1
# Warmup Iteration   1: 446272.481 ops/s
# Warmup Iteration   2: 347915.732 ops/s
# Warmup Iteration   3: 306565.151 ops/s
# Warmup Iteration   4: 251944.481 ops/s
# Warmup Iteration   5: 260519.456 ops/s
Iteration   1: 242152.431 ops/s
Iteration   2: 230978.776 ops/s
Iteration   3: 231495.852 ops/s
Iteration   4: 208099.174 ops/s
Iteration   5: 211438.183 ops/s


Result "data.structure.benchmark.Tree23Benchmark.add":
  224832.883 ±(99.9%) 55853.219 ops/s [Average]
  (min, avg, max) = (208099.174, 224832.883, 242152.431), stdev = 14504.904
  CI (99.9%): [168979.664, 280686.102] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 11.0.11, OpenJDK 64-Bit Server VM, 11.0.11+9
# VM invoker: /Library/Java/JavaVirtualMachines/adoptopenjdk-11.jdk/Contents/Home/bin/java
# VM options: -javaagent:/Users/notoday/Library/Application Support/JetBrains/Toolbox/apps/IDEA-U/ch-0/221.5080.210/IntelliJ IDEA.app/Contents/lib/idea_rt.jar=55557:/Users/notoday/Library/Application Support/JetBrains/Toolbox/apps/IDEA-U/ch-0/221.5080.210/IntelliJ IDEA.app/Contents/bin -Dfile.encoding=UTF-8
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: data.structure.benchmark.Tree23Benchmark.add
# Parameters: (size = 10000000)

# Run progress: 25.00% complete, ETA 00:05:08
# Fork: 1 of 1
# Warmup Iteration   1: 285452.156 ops/s
# Warmup Iteration   2: 253531.069 ops/s
# Warmup Iteration   3: 245732.658 ops/s
# Warmup Iteration   4: 249042.850 ops/s
# Warmup Iteration   5: 220575.020 ops/s
Iteration   1: 224757.555 ops/s
Iteration   2: 214031.069 ops/s
Iteration   3: 203296.356 ops/s
Iteration   4: 220951.586 ops/s
Iteration   5: 78973.846 ops/s


Result "data.structure.benchmark.Tree23Benchmark.add":
  188402.082 ±(99.9%) 237638.192 ops/s [Average]
  (min, avg, max) = (78973.846, 188402.082, 224757.555), stdev = 61713.884
  CI (99.9%): [≈ 0, 426040.274] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 11.0.11, OpenJDK 64-Bit Server VM, 11.0.11+9
# VM invoker: /Library/Java/JavaVirtualMachines/adoptopenjdk-11.jdk/Contents/Home/bin/java
# VM options: -javaagent:/Users/notoday/Library/Application Support/JetBrains/Toolbox/apps/IDEA-U/ch-0/221.5080.210/IntelliJ IDEA.app/Contents/lib/idea_rt.jar=55557:/Users/notoday/Library/Application Support/JetBrains/Toolbox/apps/IDEA-U/ch-0/221.5080.210/IntelliJ IDEA.app/Contents/bin -Dfile.encoding=UTF-8
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: data.structure.benchmark.Tree23Benchmark.search
# Parameters: (size = 1000000)

# Run progress: 50.00% complete, ETA 00:03:54
# Fork: 1 of 1
# Warmup Iteration   1: 623419.708 ops/s
# Warmup Iteration   2: 658471.509 ops/s
# Warmup Iteration   3: 652260.459 ops/s
# Warmup Iteration   4: 657874.118 ops/s
# Warmup Iteration   5: 659216.588 ops/s
Iteration   1: 658744.504 ops/s
Iteration   2: 658052.448 ops/s
Iteration   3: 663687.238 ops/s
Iteration   4: 658597.650 ops/s
Iteration   5: 655637.820 ops/s


Result "data.structure.benchmark.Tree23Benchmark.search":
  658943.932 ±(99.9%) 11289.639 ops/s [Average]
  (min, avg, max) = (655637.820, 658943.932, 663687.238), stdev = 2931.883
  CI (99.9%): [647654.293, 670233.570] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 11.0.11, OpenJDK 64-Bit Server VM, 11.0.11+9
# VM invoker: /Library/Java/JavaVirtualMachines/adoptopenjdk-11.jdk/Contents/Home/bin/java
# VM options: -javaagent:/Users/notoday/Library/Application Support/JetBrains/Toolbox/apps/IDEA-U/ch-0/221.5080.210/IntelliJ IDEA.app/Contents/lib/idea_rt.jar=55557:/Users/notoday/Library/Application Support/JetBrains/Toolbox/apps/IDEA-U/ch-0/221.5080.210/IntelliJ IDEA.app/Contents/bin -Dfile.encoding=UTF-8
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: data.structure.benchmark.Tree23Benchmark.search
# Parameters: (size = 10000000)

# Run progress: 75.00% complete, ETA 00:01:52
# Fork: 1 of 1
# Warmup Iteration   1: 369570.657 ops/s
# Warmup Iteration   2: 395412.312 ops/s
# Warmup Iteration   3: 390610.265 ops/s
# Warmup Iteration   4: 395421.197 ops/s
# Warmup Iteration   5: 393342.771 ops/s
Iteration   1: 389834.713 ops/s
Iteration   2: 389586.491 ops/s
Iteration   3: 395249.559 ops/s
Iteration   4: 387194.624 ops/s
Iteration   5: 397780.672 ops/s


Result "data.structure.benchmark.Tree23Benchmark.search":
  391929.212 ±(99.9%) 16955.506 ops/s [Average]
  (min, avg, max) = (387194.624, 391929.212, 397780.672), stdev = 4403.291
  CI (99.9%): [374973.706, 408884.718] (assumes normal distribution)


# Run complete. Total time: 00:07:42

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                 (size)   Mode  Cnt       Score        Error  Units
Tree23Benchmark.add      1000000  thrpt    5  224832.883 ±  55853.219  ops/s
Tree23Benchmark.add     10000000  thrpt    5  188402.082 ± 237638.192  ops/s
Tree23Benchmark.search   1000000  thrpt    5  658943.932 ±  11289.639  ops/s
Tree23Benchmark.search  10000000  thrpt    5  391929.212 ±  16955.506  ops/s
