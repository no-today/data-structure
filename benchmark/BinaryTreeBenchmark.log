# JMH version: 1.35
# VM version: JDK 11.0.11, OpenJDK 64-Bit Server VM, 11.0.11+9
# VM invoker: /Library/Java/JavaVirtualMachines/adoptopenjdk-11.jdk/Contents/Home/bin/java
# VM options: -javaagent:/Users/notoday/Library/Application Support/JetBrains/Toolbox/apps/IDEA-U/ch-0/221.5080.210/IntelliJ IDEA.app/Contents/lib/idea_rt.jar=50252:/Users/notoday/Library/Application Support/JetBrains/Toolbox/apps/IDEA-U/ch-0/221.5080.210/IntelliJ IDEA.app/Contents/bin -Dfile.encoding=UTF-8
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: data.structure.benchmark.BinaryTreeBenchmark.add
# Parameters: (size = 1000000)

# Run progress: 0.00% complete, ETA 00:10:00
# Fork: 1 of 1
# Warmup Iteration   1: 457939.505 ops/s
# Warmup Iteration   2: 369738.084 ops/s
# Warmup Iteration   3: 336483.759 ops/s
# Warmup Iteration   4: 293845.204 ops/s
# Warmup Iteration   5: 274048.434 ops/s
Iteration   1: 263804.855 ops/s
Iteration   2: 252425.087 ops/s
Iteration   3: 255983.410 ops/s
Iteration   4: 250079.802 ops/s
Iteration   5: 245265.963 ops/s


Result "data.structure.benchmark.BinaryTreeBenchmark.add":
  253511.823 ±(99.9%) 26748.066 ops/s [Average]
  (min, avg, max) = (245265.963, 253511.823, 263804.855), stdev = 6946.388
  CI (99.9%): [226763.757, 280259.890] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 11.0.11, OpenJDK 64-Bit Server VM, 11.0.11+9
# VM invoker: /Library/Java/JavaVirtualMachines/adoptopenjdk-11.jdk/Contents/Home/bin/java
# VM options: -javaagent:/Users/notoday/Library/Application Support/JetBrains/Toolbox/apps/IDEA-U/ch-0/221.5080.210/IntelliJ IDEA.app/Contents/lib/idea_rt.jar=50252:/Users/notoday/Library/Application Support/JetBrains/Toolbox/apps/IDEA-U/ch-0/221.5080.210/IntelliJ IDEA.app/Contents/bin -Dfile.encoding=UTF-8
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: data.structure.benchmark.BinaryTreeBenchmark.add
# Parameters: (size = 10000000)

# Run progress: 16.67% complete, ETA 00:08:46
# Fork: 1 of 1
# Warmup Iteration   1: 321418.371 ops/s
# Warmup Iteration   2: 287534.367 ops/s
# Warmup Iteration   3: 278025.408 ops/s
# Warmup Iteration   4: 261044.006 ops/s
# Warmup Iteration   5: 255475.025 ops/s
Iteration   1: 257861.651 ops/s
Iteration   2: 249135.560 ops/s
Iteration   3: 237549.668 ops/s
Iteration   4: 236686.609 ops/s
Iteration   5: 242924.948 ops/s


Result "data.structure.benchmark.BinaryTreeBenchmark.add":
  244831.687 ±(99.9%) 33970.289 ops/s [Average]
  (min, avg, max) = (236686.609, 244831.687, 257861.651), stdev = 8821.976
  CI (99.9%): [210861.399, 278801.976] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 11.0.11, OpenJDK 64-Bit Server VM, 11.0.11+9
# VM invoker: /Library/Java/JavaVirtualMachines/adoptopenjdk-11.jdk/Contents/Home/bin/java
# VM options: -javaagent:/Users/notoday/Library/Application Support/JetBrains/Toolbox/apps/IDEA-U/ch-0/221.5080.210/IntelliJ IDEA.app/Contents/lib/idea_rt.jar=50252:/Users/notoday/Library/Application Support/JetBrains/Toolbox/apps/IDEA-U/ch-0/221.5080.210/IntelliJ IDEA.app/Contents/bin -Dfile.encoding=UTF-8
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: data.structure.benchmark.BinaryTreeBenchmark.remove
# Parameters: (size = 1000000)

# Run progress: 33.33% complete, ETA 00:07:40
# Fork: 1 of 1
# Warmup Iteration   1: 635694.514 ops/s
# Warmup Iteration   2: 648047.161 ops/s
# Warmup Iteration   3: 656032.696 ops/s
# Warmup Iteration   4: 647590.244 ops/s
# Warmup Iteration   5: 663780.545 ops/s
Iteration   1: 666768.512 ops/s
Iteration   2: 658937.789 ops/s
Iteration   3: 661897.407 ops/s
Iteration   4: 660409.599 ops/s
Iteration   5: 661140.675 ops/s


Result "data.structure.benchmark.BinaryTreeBenchmark.remove":
  661830.796 ±(99.9%) 11431.134 ops/s [Average]
  (min, avg, max) = (658937.789, 661830.796, 666768.512), stdev = 2968.629
  CI (99.9%): [650399.662, 673261.930] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 11.0.11, OpenJDK 64-Bit Server VM, 11.0.11+9
# VM invoker: /Library/Java/JavaVirtualMachines/adoptopenjdk-11.jdk/Contents/Home/bin/java
# VM options: -javaagent:/Users/notoday/Library/Application Support/JetBrains/Toolbox/apps/IDEA-U/ch-0/221.5080.210/IntelliJ IDEA.app/Contents/lib/idea_rt.jar=50252:/Users/notoday/Library/Application Support/JetBrains/Toolbox/apps/IDEA-U/ch-0/221.5080.210/IntelliJ IDEA.app/Contents/bin -Dfile.encoding=UTF-8
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: data.structure.benchmark.BinaryTreeBenchmark.remove
# Parameters: (size = 10000000)

# Run progress: 50.00% complete, ETA 00:05:32
# Fork: 1 of 1
# Warmup Iteration   1: 421366.801 ops/s
# Warmup Iteration   2: 433460.284 ops/s
# Warmup Iteration   3: 433594.401 ops/s
# Warmup Iteration   4: 423212.082 ops/s
# Warmup Iteration   5: 427232.426 ops/s
Iteration   1: 435012.853 ops/s
Iteration   2: 427368.918 ops/s
Iteration   3: 439664.039 ops/s
Iteration   4: 435901.112 ops/s
Iteration   5: 435976.063 ops/s


Result "data.structure.benchmark.BinaryTreeBenchmark.remove":
  434784.597 ±(99.9%) 17383.381 ops/s [Average]
  (min, avg, max) = (427368.918, 434784.597, 439664.039), stdev = 4514.409
  CI (99.9%): [417401.216, 452167.978] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 11.0.11, OpenJDK 64-Bit Server VM, 11.0.11+9
# VM invoker: /Library/Java/JavaVirtualMachines/adoptopenjdk-11.jdk/Contents/Home/bin/java
# VM options: -javaagent:/Users/notoday/Library/Application Support/JetBrains/Toolbox/apps/IDEA-U/ch-0/221.5080.210/IntelliJ IDEA.app/Contents/lib/idea_rt.jar=50252:/Users/notoday/Library/Application Support/JetBrains/Toolbox/apps/IDEA-U/ch-0/221.5080.210/IntelliJ IDEA.app/Contents/bin -Dfile.encoding=UTF-8
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: data.structure.benchmark.BinaryTreeBenchmark.search
# Parameters: (size = 1000000)

# Run progress: 66.67% complete, ETA 00:03:48
# Fork: 1 of 1
# Warmup Iteration   1: 636055.059 ops/s
# Warmup Iteration   2: 648880.413 ops/s
# Warmup Iteration   3: 640149.412 ops/s
# Warmup Iteration   4: 640050.339 ops/s
# Warmup Iteration   5: 634990.841 ops/s
Iteration   1: 631895.578 ops/s
Iteration   2: 630491.612 ops/s
Iteration   3: 636841.868 ops/s
Iteration   4: 638313.900 ops/s
Iteration   5: 646120.185 ops/s


Result "data.structure.benchmark.BinaryTreeBenchmark.search":
  636732.628 ±(99.9%) 23813.821 ops/s [Average]
  (min, avg, max) = (630491.612, 636732.628, 646120.185), stdev = 6184.374
  CI (99.9%): [612918.807, 660546.450] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 11.0.11, OpenJDK 64-Bit Server VM, 11.0.11+9
# VM invoker: /Library/Java/JavaVirtualMachines/adoptopenjdk-11.jdk/Contents/Home/bin/java
# VM options: -javaagent:/Users/notoday/Library/Application Support/JetBrains/Toolbox/apps/IDEA-U/ch-0/221.5080.210/IntelliJ IDEA.app/Contents/lib/idea_rt.jar=50252:/Users/notoday/Library/Application Support/JetBrains/Toolbox/apps/IDEA-U/ch-0/221.5080.210/IntelliJ IDEA.app/Contents/bin -Dfile.encoding=UTF-8
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: data.structure.benchmark.BinaryTreeBenchmark.search
# Parameters: (size = 10000000)

# Run progress: 83.33% complete, ETA 00:01:51
# Fork: 1 of 1
# Warmup Iteration   1: 394615.198 ops/s
# Warmup Iteration   2: 377807.972 ops/s
# Warmup Iteration   3: 408523.206 ops/s
# Warmup Iteration   4: 410019.250 ops/s
# Warmup Iteration   5: 401726.965 ops/s
Iteration   1: 399160.126 ops/s
Iteration   2: 402162.322 ops/s
Iteration   3: 254609.155 ops/s
Iteration   4: 408636.877 ops/s
Iteration   5: 403717.092 ops/s


Result "data.structure.benchmark.BinaryTreeBenchmark.search":
  373657.114 ±(99.9%) 256599.651 ops/s [Average]
  (min, avg, max) = (254609.155, 373657.114, 408636.877), stdev = 66638.114
  CI (99.9%): [117057.463, 630256.765] (assumes normal distribution)


# Run complete. Total time: 00:11:24

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                     (size)   Mode  Cnt       Score        Error  Units
BinaryTreeBenchmark.add      1000000  thrpt    5  253511.823 ±  26748.066  ops/s
BinaryTreeBenchmark.add     10000000  thrpt    5  244831.687 ±  33970.289  ops/s
BinaryTreeBenchmark.remove   1000000  thrpt    5  661830.796 ±  11431.134  ops/s
BinaryTreeBenchmark.remove  10000000  thrpt    5  434784.597 ±  17383.381  ops/s
BinaryTreeBenchmark.search   1000000  thrpt    5  636732.628 ±  23813.821  ops/s
BinaryTreeBenchmark.search  10000000  thrpt    5  373657.114 ± 256599.651  ops/s
